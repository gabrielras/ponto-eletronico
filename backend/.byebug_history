continue
attributes[:schedule_time]
PointPresence.last
state
PointPresence.where(:created_at => Time.zone.now.beginning_of_day..Time.zone.now.end_of_day).where(role_id: user.role.id, state: state).present?
PointPresence.where(:created_at => Time.zone.now.beginning_of_day..Time.zone.now.end_of_day).where(role_id: user.role.id, state: state).last
PointPresence.where(:created_at => Time.zone.now.beginning_of_day..Time.zone.now.end_of_day).where(role_id: user.role.id, state: state).present?
attributes
continue
attributes
atributes
e
next
continue
attributes["schedule_time"]
last_point_presence.schedule_time
last_point_presence = PointPresence.where(:created_at => Time.zone.now.beginning_of_day..Time.zone.now.end_of_day).where(role_id: user.role.id).last
PointPresence.where(:created_at => Time.zone.now.beginning_of_day..Time.zone.now.end_of_day).where(role_id: user.role.id, state: state).present?
next
continue
new_time
point_presence.present?
continue
new_time
point_presence.present?
continue
point_presence(schedule, 'final_time')
schedule = schedules.last
total_time(schedules.last)
next
schedules
continue
result
continue
 @schedules.joins(:role).where(role: { id: @schedules.pluck(:role_id).uniq }).group(:role_id).lastc
next
continue
@schedules.joins(:role).where(role: { id: 8 }).last
@schedules.joins(:role).where(role: { id: role_id }).last
@schedules.pluck(:role_id).uniq
@schedules
@schedules_uniq
schedules_uniq
next
continue
schedules_uniq
@schedules
next
@schedules.joins(:role).where(role: { id: 8 }).last
@schedules.joins(:role).where(role: { id: 8 })
@schedules
next
continue
schedules_uniq
@schedules
next
name
next
@schedules
next
continue
@schedules
s
next
@schedules
next
continue
 @schedules = Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id }).where('schedules.closing_date::date >= ?', date).where('schedules.created_at::date >= ?', date).where('schedules.start_date::date <= ?', date.end_of_day).pluck(:role_id).uniq
 @schedules = Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id }).where('schedules.closing_date::date >= ?', date).where('schedules.created_at::date >= ?', date).where('schedules.start_date::date <= ?', date.end_of_day)
@schedules
next
 @schedules = Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id }).where('schedules.closing_date::date >= ?', date).where('schedules.created_at::date >= ?', date).where('schedules.start_date::date <= ?', date.end_of_day)
 @schedules = Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id }).where('schedules.closing_date::date >= ?', date).where('schedules.created_at::date >= ?', date)
 @schedules = Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id }).where('schedules.closing_date::date >= ?', date)
 @schedules = Schedule.joins(role: [:user, :company])
continue
continune
{"schedule_time"=>"", "longitude"=>"", "latitude"=>"", "local_name"=>"R. Muniz Freire, 72 - Messejana, Fortaleza - CE, 60841-210, Brazil"}
attributes
e
next
continue
 Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date::date >= ?', date).where('schedules.start_date::date <= ?', date.end_of_day).where('schedules.created_at::date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true).last
 Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date::date >= ?', date).where('schedules.start_date::date <= ?', date).where('schedules.created_at::date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true).last
date
 Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date::date >= ?', date).where('schedules.created_at::date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true).last
 Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date::date >= ?', date).where('schedules.start_date::date <= ?', date).where('schedules.created_at::date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true).last
self.schedule
continue
Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id }).where('schedules.closing_date::date >= ?', date).where('schedules.created_at::date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true).where('schedules.start_date::date <= ?', date)
Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id }).where('schedules.closing_date::date >= ?', date).where('schedules.created_at::date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true).where('schedules.start_date::date >= ?', date)
Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id }).where('schedules.closing_date::date >= ?', date).where('schedules.created_at::date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true).where('schedules.start_date::date <= ?', date)
Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id }).where('schedules.closing_date::date >= ?', date).where('schedules.created_at::date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true)
Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id }).where('schedules.closing_date::date >= ?', date).where('schedules.created_at::date >= ?', date).where('schedules.start_date::date <= ?', date)
Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id }).where('schedules.closing_date::date >= ?', date).where('schedules.created_at::date >= ?', date) .where('schedules.start_date::date <= ?', date)
Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id }).where('schedules.closing_date::date >= ?', date).where('schedules.created_at::date >= ?', date)
Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id }).where('schedules.closing_date::date >= ?', date)
Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id })
Schedule.joins(role: [:user, :company])
date
data
@schedules
continue
schedule
next
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date::date >= ?', date).where('schedules.start_date::date <= ?', date).where('schedules.created_at::date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true).last
continue
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date::date >= ?', date).where('schedules.start_date::date <= ?', date).where('schedules.created_at::date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true).last
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date::date >= ?', date).where('schedules.start_date::date <= ?', date).where('schedules.created_at::date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true)
date.strftime('%A').downcase
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date::date >= ?', date).where('schedules.start_date::date <= ?', date).where('schedules.created_at::date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true)
schedule
schedule.blank?
next
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date::date >= ?', date).where('schedules.start_date::date <= ?', date).where('schedules.created_at::date >= ?', date)
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date::date >= ?', date).where('schedules.start_date::date <= ?', date)
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date::date >= ?', date)
Schedule.joins(:role).where(role: { user_id: user.id })
continue
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.created_at::date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true).where('schedules.start_date::date <= ?', date)
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.created_at >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true).where('schedules.start_date::date <= ?', date)
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.created_at >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true).where('schedules.start_date <= ?', date)
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.created_at >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true)
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.created_at >= ?', date)
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.start_date <= ?', date)
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date)
Schedule.joins(:role).where(role: { user_id: user.id })
date
data
continue
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.closing_date >= ?', date).where('schedules.start_date <= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true).last
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.closing_date >= ?', date).where('schedules.start_date <= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true)
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.closing_date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true)
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.closing_date >= ?', date).where('schedules.start_date >= ?', date).where("schedules.#{date.strftime('%A').downcase} = ?", true)
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.closing_date >= ?', date).where('schedules.start_date >= ?', date)
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.closing_date >= ?', date)
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.closing_date >= ?', date).where('schedules.start_date >= ?', date)
date
dadate
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.closing_date >= ?', date).first
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.closing_date >= ?', date).where('schedules.start_date >= ?', date)
Schedule.joins(:role).where(role: { user_id: user.id }).where('schedules.closing_date >= ?', date).where('schedules.closing_date >= ?', date)
schedule
next
continue
e
continue
e
continue
next
continue
error
next
continue
result
next
user_params
continue
next
continue
exception
next
attributes
continue
conitnue
user_params
continue
contnue
params.permit(:name, :email, :password, :company_name, :type_role).to_h
user_params
continue
result.try(:data).try(:[], 0).try(:[], :tempo_total)
[].first[0][:tempo_total]
[][0][:tempo_total]
result.data[3][:tempo_total]
result.data[0][:tempo_total]
result.data[0]
result.data[:tempo_total]
result.data
result.date
result
result.tempo_total
schedule.start_time_hour
converter_tempo_para_minutos(result.tempo_total)
next
tempo_de_trabalho_padrao_em_minutos(result.schedule)
continue
schedule
next
continue
date.strftime('%A').downcase
date.strftime('%A').downcase}
schedule
next
continue
next
schedule
continue
current_user
@current_user
@current_user.role.collaborator_active?
exit
continue
next
result.data
result.date
result
next
continue
result.data.blank?
result.data
result.data.present?
next
continue
contnue
e
next
continue
e
result
next
continue
(Time.zone.now.beginning_of_month..Time.zone.now).step(1.day)
continue
e
next
 (Time.zone.now.beginning_of_month..Time.zone.now)
continue
Time.zone.now.beginning_of_month
Time.zone.beginning_of_month
Time.zone.now.beginning_of_month
(Time.zone.now.beginning_of_day
(Time.zone.now.beginning_of_day..Time.zone.now)
continue
Time.zone.now.beginning_of_day
         ^^^^^^^^^^^^^^^^^
Time.zone.beginning_of_day
Time.zone.beginning_of_day..Time.zone.now
continue
point_presence(x, 'start_time')
point_presence(schedule, 'start_time')
tempo_inicial(x)
tempo_final(x)
total_time(x)
x = @schedules.first
@schedules.first
@schedules
next
@schedules
next
continue
 Schedule.joins(role: [:user, :company]).where(companies: { id: user.role.company_id }).where('schedules.closing_date >= ?', date).where('schedules.start_date >= ?', date)
@schedules
next
continue
@schedules.first
